
[gcode_macro configvars]
#------------------------------------------------- EUCLID PROBE -------------------------------------------------- 
variable_euclidX: 27.5                   # X Position directly over probe
variable_euclidY: 306.5                  # Y Position directly over probe
variable_euclidSwipeX: 100             # X Position, swipe to the side to free probe of dock
variable_euclidSafeDeployZ: 25         # Z Safe height for deployment approach
variable_euclidSafeStowZ: 30           # Z Safe height following stowing the probe (break mag pull)
variable_euclidDeployZ: 2.0            # Lower to just above probe, no physical contact
variable_euclidStowZ: -0.3              # Lower to exact postion for dock entry/exit

#------------------------------------------------ Z Compensation ------------------------------------------------- 
variable_euclidZCompensation: 0      # Z0 Compensation based off probe height, set to 0 to disable (Testing)

#---------------------------------------------- HEATSOAK & COOLING ----------------------------------------------- 
variable_hotmeshSoakMinutes: 20        # Minutes to heat-soak prior to running mesh
variable_preprintSoakMinutes: 10       # Minutes to heat-soak prior to printing
variable_postprintCool: 0.5              # Post-Print cooling to prevent nozzle string, minutes of cooling
variable_postprintParkCool: 2          # Once parks, minutes of cooling

#------------------------------------------- PRINTING MOTOR CURRENTS --------------------------------------------- 
variable_printCurrentXY: 1.1           # Steppermotor current to be used while printing
variable_printCurrentZ: 0.8            # Steppermotor current to be used while printing

#--------------------------------------------- DEFAULT TEMPERATURES ---------------------------------------------- 
variable_defaultTempNozzle: 240        # The default temperature if none is specified
variable_defaultWarmNozzle: 140        # The default temperature if none is specified
variable_defaultTempBed: 110           # The default temperature if none is specified


#      ! ! ! ADDITIONAL SETTINGS ARE WITHIN THE PRINTER CONFIGURATION PORTION BELOW, STARTING ~LINE 150 ! ! !
gcode:



#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  NOTES & INFORMATION
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

# Once you have followed the commissioning procedures found here: https://docs.vorondesign.com/build/startup/,
# run HOTMESH to store a good working mesh - this is required for this configuration. After HOTMESH, calibrate
# with G3201 as stated below.
#
# PRINT_START will home and the level the gantry, perform a heat soak, then G3201, and lastly bring the hotend
# to temperature and execute a purge line from the front left across X-axis to check/verify easily. The purge
# line extrusion rate will be calculated by using the [nozzle_diameter] value.
#
# PRINT_END will raise by 10mm when the print has completed, then performs a cooling period by turning the fan
# fully on and then parks the toolhead at the top, front-right position. The parked Z position will be at least
# 75% of the max axis height or at the printed object's Z height + 10 - whichever is taller - this allows for
# easy visual inspection of the toolhead/nozzle (and a reminder to do so) and removal of any debris. Additionally
# to note, during PRINT_END or PRINT_START, the toolhead is placed back at Y20 to allow room for the fan(s) to
# pull air without being blocked by being pressed up against the doors. 
#  
# NOTE: This configuration utilizes the Euclid probe with the dock mounted on the bed rail. For fetching and
# docking the probe, use M401 and M402 as they have safety checks to prevent crashes! 
# The following STL files were used:  
# https://github.com/nionio6915/Euclid_Probe/blob/main/stls/Voron/Voron2.4BedMountV3.stl
# https://github.com/nionio6915/Euclid_Probe/blob/main/stls/Mount%20Adapters/Omron/OmronFotekM2_V3.stl
#
# My Github (This file)              https://github.com/rkolbi/voron2.4/blob/main/printer.cfg
# Klipper Documentation (Main):      https://www.klipper3d.org/Overview.html
# Klipper Configuration Reference:   https://www.klipper3d.org/Config_Reference.html
# Klipper G-Code Reference:          https://www.klipper3d.org/G-Codes.html
# Klipper Github:                    https://github.com/Klipper3d
# Klipper Reddit:                    https://www.reddit.com/r/klippers/
# Voron Documentation:               https://docs.vorondesign.com/build/
# Voron Github:                      https://github.com/VoronDesign
# Voron Reddit:                      https://www.reddit.com/r/VORONDesign/
# Euclid Probe:                      https://euclidprobe.github.io/
# Bondtech LGX:                      https://www.bondtech.se/product/lgx-large-gears-extruder/
# Bontech CHT Nozzle:                https://www.bondtech.se/product/bondtech-cht-coated-brass-nozzle/


#.................................................................................................................
# Slicer Setup
#
# SuperSlicer's start print gcode should only contain the following:
#   PRINT_START BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature]
#
# SuperSlicer's end print gcode should contain the following:
#   Use PRINT_END for the slicer ending script


#----------------------------------------------- AVAILABLE MACROS ------------------------------------------------
# Macros contained withing this configuration:

#.................................................................................................................
# G3201 - No additional options / Usage: G3201
#   Homes the toolhead, performs quad gantry leveling, homes Z, applies HOTMESH, homes Z again, then
#   probes four-bed center points. The four probing resultant median values are then averaged and
#   compared to [variable_euclidZCompensation]. The difference between the probe findings and this variable is
#   applied to the current Z height (Z25), defined as NEW_CURRENT_Z and then set with SET_KINEMATIC_POSITION.
#  *If [variable_euclidZCompensation] is set to 0, compensation will not be applied. Additionally, once
#   the Z-axis is homed, any existing compensation from G3201 will be discarded.
#   To figure ZCompensation, do the following: Check nozzle clean and free of debris, same for bed. Run a G3201
#   and then place a sheet of paper over the bed center. Then slowly, using the -1mm button, move the nozzle
#   toward the bed. Once the nozzle is close, shift to the 0.1mm button and continue until the nozzle touches
#   a piece of paper on top of the build plate. If the current Z position is greater than 0, subtract the
#   current Z position from the currently set [variable_euclidZCompensation]. If the current Z position is less
#   than 0, a negative number, then take that number and add it to the current [variable_euclidZCompensation].

#.................................................................................................................
# G32 - No additional options / Usage: G32
#   Homes the toolhead, performs quad gantry leveling, and homes again.

#.................................................................................................................
# M401 - No additional options / # Usage: M401
#   Attach the Euclid probe to the toolhead.

#.................................................................................................................
# M402 - No additional options / Usage: M402
#   Remove the Euclid probe from the toolhead by placing it in the dock.

#.................................................................................................................
# HOTMESH - Optional parameters: BED_TEMP / Usage: HOTMESH, HOTMESH BED_TEMP=110
#   Perform a heat soak, followed by a bed mesh. If no BED_TEMP is specified, [defaultTempBed] will be used.

#.................................................................................................................
# LOAD_FILAMENT - Optional parameters: TEMP / Usage: LOAD_FILAMENT, LOAD_FILAMENT TEMP=240
#   It brings the toolhead to the front, heats up (if not already hot), and extrudes 150mm of filament.
#   If no TEMP is specified, [defaultTempNozzle] will be used.

#.................................................................................................................
# UNLOAD_FILAMENT - Optional parameters: TEMP / Usage: UNLOAD_FILAMENT, UNLOAD_FILAMENT TEMP=240
#   It brings the toolhead to the front, heats up (if not already hot), and retracts 200mm of filament.
#   If no TEMP is specified, [defaultTempNozzle] will be used.

#.................................................................................................................
# NZL_PID - Optional parameters: BED_TEMP, NZL_TEMP / Usage: NZL_PID, NZL_PID NZL_TEMP=240 BED_TEMP=100
#   It performs bed heat soak and then nozzle PID tune. If no parameters are specified, BED_TEMP will be
#   [defaultTempBed], and NZL_TEMP will be [defaultTempNozzle].

#.................................................................................................................
# BED_PID - Optional parameters: BED_TEMP / Usage: BED_PID, BED_PID BED_TEMP=110
#   It performs bed PID tune. If no parameters are specified, BED_TEMP will be [defaultTempBed].

#.................................................................................................................
# PA_CAL - Optional parameters: BED, EXTRUDER, PA_START, PA_STEP, NZL
# Usage: PA_CAL BED=100 EXTRUDER=240 PA_START=0.03 PA_STEP=0.002 NZL=0.4
#   It performs a quick and simple line pressure advance test. First prints a line with the currently
#   set PA, move 30mm and then prints 20 line segments, 5mm apart, starting with PA_START, increasing each
#   line by PA_STEP. If no parameters are specified, PA_CAL will use the following:
#   PA_CAL BED=[defaultTempBed] EXTRUDER=[defaultTempNozzle] PA_START=0.0 PA_STEP=0.005 NZL=(as per printer.cfg)



#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Printer Configuration
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[include fluidd.cfg]
[include autoz.cfg]
[include macros.cfg]
[include shell_command.cfg]
#[include adxl345.cfg]


[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
# serial: /dev/serial/by-id/{REPLACE WITH YOUR SERIAL}
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_2E0042001150324E31333220-if00
#serial: /dev/ttyACM0
restart_method: command
#canbus_uuid: 2a65bb383f8c

#[mcu sb2040]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E66138935F445924-if00
#restart_method: command
#canbus_uuid: 592e9bfeae3c

[virtual_sdcard]
path: ~/printer_data/gcodes

[input_shaper]
shaper_freq_x: 67.4
shaper_type_x: ei
shaper_freq_y: 41.8
shaper_type_y: ei

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 3300  #Max 4000
max_z_velocity: 25  #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 2.5

[force_move]
enable_force_move: false

[display_status]
# For mainsail

[pause_resume]
# For mainsail

[respond]
default_type: echo

[idle_timeout]
timeout: 1800 # timeout in seconds (1800 = 30 minutes)
gcode:
    {% if printer.pause_resume.is_paused %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    {% else %}
    TURN_OFF_HEATERS
    {%endif%}
#This will only turn the extruder off if the printer is paused, but turn off all heaters if the printer is idle.


#.................................................................................................................
# Settings for when using external Arduino Nano with ADXL345 for resonance testing
#[mcu ardu]
#serial: /dev/serial/by-id/usb-Silicon_Labs_CP2104_USB_to_UART_Bridge_Controller_0199928E-if00-port0
# 
#[adxl345]
#cs_pin: ardu:PB2
# 
#[resonance_tester]
#accel_chip: adxl345
#probe_points: 175,175,20


#.................................................................................................................
[extruder]
# Extruder 0 on MOTOR_6, Heater - HE0, Thermistor - T0
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
rotation_distance: 22.6789511
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200
nozzle_diameter: 0.6  #    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Nozzle Diameter<<<
filament_diameter: 1.75
heater_pin: PA2
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
#control: pid
#pid_kp: 31.201
#pid_ki: 1.664
#pid_kd: 146.256
pressure_advance: 0.035  #    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Pressure Advance<<<
pressure_advance_smooth_time: 0.030

[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.45
sense_resistor: 0.110
stealthchop_threshold: 0


[safe_z_home]
home_xy_position:207.5,305 # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Z-Endstop Position<<<
speed:100
z_hop:15


[probe]
# Euclid_Probe
pin: PG15
x_offset: 0
y_offset: 25.0
#z_offset: 3.7
speed: 5.0
lift_speed: 10.0
samples: 5
samples_result: median
sample_retract_dist: 1.5
#samples_tolerance: 0.0075
samples_tolerance: 0.0075
samples_tolerance_retries: 5


[bed_mesh]
speed: 50  #    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Bed-mesh Settings<<<
horizontal_move_z: 15
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.6
fade_end: 10.0
probe_count: 11,11
algorithm: bicubic
#bicubic_tension: .2
zero_reference_position: 150, 150


[quad_gantry_level]
gantry_corners:
   -60,-10
   360,370
points:
   50,25
   50,225
   250,225
   250,25
speed: 200
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075
max_adjust: 15


#.................................................................................................................
[stepper_x]
# B Stepper - Left, Connected to MOTOR_0, Endstop connected to DIAG_0
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 128
full_steps_per_rotation:200
endstop_pin: PG6
position_min: 0
position_endstop: 300  #    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<X-Endstop Position<<<
position_max: 300
homing_speed: 50   #Max 100
second_homing_speed: 10
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.105
stealthchop_threshold: 0


#.................................................................................................................
[stepper_y]
# A Stepper - Right, Connected to MOTOR_1, Endstop connected to DIAG_1
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 128
full_steps_per_rotation:200
endstop_pin: PG9
position_min: 0
position_endstop: 307  #    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Y-Endstop Position<<<
position_max: 307
homing_speed: 50   #Max 100
second_homing_speed: 10
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 

[stepper_z]
# Z0 Stepper - Front Left, Connected to MOTOR_2, Endstop connected to DIAG_2
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: 1.95
position_max: 260
position_min: -5
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


[stepper_z1]
# Z1 Stepper - Rear Left, Connected to MOTOR_3
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


[stepper_z2]
# Z2 Stepper - Rear Right, Connected to MOTOR_4
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


[stepper_z3]
# Z3 Stepper - Front Right, Connected to MOTOR_5
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#.................................................................................................................
[thermistor bed_thermistor]
temperature1: 25.0
resistance1: 100000.0
temperature2: 80.0
resistance2: 12540.0
temperature3: 150.0
resistance3: 1770.0

[heater_bed]
# SSR Pin - HE1, Thermistor - TB
heater_pin: PA3
sensor_type: bed_thermistor
sensor_pin: PF3
# Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 45.529
#pid_ki: 1.399
#pid_kd: 370.495
#pwm_cycle_time = 1/mains hz (1/50 = 0.02 for 50hz, 1/60 = 0.0166 for 60hz)
#pwm_cycle_time: 0.02

#####################################################################
#   Additional Thermals
#####################################################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


#[duplicate_pin_override]
#pins: PF5
#temperature_sensor chamber]
#sensor_type: Generic 3950
#sensor_pin: PF5
#min_temp: 0
#max_temp: 100
#gcode_id: C

#.................................................................................................................
[fan]
# Print Cooling Fan - FAN0
pin: !PA8
# RPM monitoring:
#tachometer_pin: ^PG14
#tachometer_ppr: 2
#tachometer_poll_interval: 0.0015
kick_start_time: 0.5
# Depending on your fan, you may need to increase this value
# if your fan will not start. Can change cycle_time (increase)
# if your fan is not able to slow down effectively
off_below: 0.10


[heater_fan hotend_fan]
# Hotend Fan - FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
# Controller fan1 - FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.4


[controller_fan controller_fan2]
# Controller fan2 - FAN3
pin: PD13
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.4

#[fan_generic Exhaust_Fan]
#pin: PD14
#max_power: 1.0
#shutdown_speed: 0.0
[temperature_fan chamber]
pin: PD14
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
cycle_time:0.01
off_below:0.1
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp: 70
target_temp: 35.0
control: watermark
gcode_id: C

#.................................................................................................................
[neopixel nozzle]
pin: PB0
chain_count: 3
color_order: GRB
initial_RED: 0.2
initial_GREEN: 0.5
initial_BLUE: 0.2
initial_WHITE: 0.0

[output_pin Caselight]
pin: PB11
pwm: true
shutdown_value: 0
# reduce strobe effect on camera
cycle_time: 0.01

#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  MACROS required for the base configuration
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#.................................................................................................................
[delayed_gcode prerun]
initial_duration: 1
gcode:
    QUERY_PROBE
    M117 Printer online.
    {% for s in range(0, 30) %}
        SET_LED LED=nozzle INDEX=2 RED=1 GREEN=0 BLUE=1
        SET_LED LED=nozzle INDEX=3 RED=.5 GREEN=.5 BLUE=.5
        G4 P100
        SET_LED LED=nozzle INDEX=2 RED=.5 GREEN=.5 BLUE=.5
        SET_LED LED=nozzle INDEX=3 RED=1 GREEN=0 BLUE=1
        G4 P50
    {% endfor %}
    SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
	SET_PIN Pin=Caselight value=0.25
	
	
#.................................................................................................................
# M141 Set chamber temp
[gcode_macro M141]
gcode:
    {% set s = params.S|default(0)|float %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={s}

# M401 - Deploy Euclid Probe
[gcode_macro M401]
gcode:
    QUERY_PROBE
    {% if printer.probe.last_query %}
        M118 Fetching Euclid Probe.
        G28 Z
        _PROBE_DEPLOY
    {% else %}
        M118 ?!Probe is already attached.
    {% endif %}



#.................................................................................................................
# M402 - Stow Euclid Probe
[gcode_macro M402]
gcode:
    QUERY_PROBE
    {% if not printer.probe.last_query %}
        M118 Stowing Euclid Probe.
        G28 Z
        _PROBE_STOW
    {% else %}
        M118 ?!Probe is not attached.
    {% endif %}



#.................................................................................................................
# Euclid Probe Safety Checks

#.................................................................................................................
[gcode_macro _do_error_if_probe_deployed]
gcode:
    {% if not printer.probe.last_query %}
        {action_raise_error("ERROR: probe still deployed - remove and return to dock.")}
    {% else %}
        M118 Euclid Probe has been stowed.  
    {% endif %}
	
#.................................................................................................................
[gcode_macro _error_if_probe_deployed]
gcode:
    G4 P300
    QUERY_PROBE
    _do_error_if_probe_deployed
	
#.................................................................................................................
[gcode_macro _do_error_if_probe_not_deployed]
gcode:
    {% if printer.probe.last_query %}
        {action_raise_error("ERROR: probe unsuccessfully deployed.")}
    {% else %}
        M118 Euclid Probe has been attached.
    {% endif %}
	
#.................................................................................................................
[gcode_macro _error_if_probe_not_deployed]
gcode:
    G4 P300
    QUERY_PROBE
    _do_error_if_probe_not_deployed
	
	

#.................................................................................................................
[gcode_macro _PROBE_DEPLOY]
gcode:
    G90
    G0 Z{printer["gcode_macro configvars"].euclidsafedeployz|float} F800
    G0 X{printer["gcode_macro configvars"].euclidx|float} Y{printer["gcode_macro configvars"].euclidy|float} F3500
    G0 Z{printer["gcode_macro configvars"].eucliddeployz|float} F800
    G0 X{printer["gcode_macro configvars"].euclidswipex|float} Y{printer["gcode_macro configvars"].euclidy|float} F3500
    G0 Z{printer["gcode_macro configvars"].euclidsafedeployz|float} F800
    _error_if_probe_not_deployed ; Verify probe attached



#.................................................................................................................
[gcode_macro _PROBE_STOW]
gcode:
    G90
    G0 X{printer["gcode_macro configvars"].euclidswipex|float} Y{printer["gcode_macro configvars"].euclidy|float} F3500
    G0 Z{printer["gcode_macro configvars"].euclidstowz|float} F500
    G0 X{printer["gcode_macro configvars"].euclidx|float} Y{printer["gcode_macro configvars"].euclidy|float} F1000
    G0 Z{printer["gcode_macro configvars"].euclidsafestowz|float} F800
    _error_if_probe_deployed ; Verify probe detached	
	
	
	
#.................................................................................................................
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: QUAD_GANTRY_LEVEL_ORIGINIAL
gcode:
    QUERY_PROBE
    M401
    QUAD_GANTRY_LEVEL_ORIGINIAL
    LEDMODE_QGL
    M402



#.................................................................................................................
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_ORIGINIAL
gcode:
    LEDMODE_BEDMESH
    QUERY_PROBE
    M401
    BED_MESH_CALIBRATE_ORIGINIAL
    M402



#.................................................................................................................
[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    LEDMODE_HOMED
    QUAD_GANTRY_LEVEL
    LEDMODE_QGL
    BED_MESH_PROFILE LOAD=HOTMESH
#    QUERY_PROBE
#    {% if printer.probe.last_query %}
#        M118 Fetching Euclid Probe.
#        _PROBE_DEPLOY
#    {% endif %}
#    QUAD_GANTRY_LEVEL_ORIGINIAL
#    G28 Z
#    LEDMODE_HOMED
#    M118 Stowing Euclid Probe.
#    _PROBE_STOW
#    QUERY_PROBE



#.................................................................................................................
[gcode_macro G3201]
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
    BED_MESH_CLEAR
    G28
    LEDMODE_HOMED
    QUAD_GANTRY_LEVEL
    LEDMODE_QGL
#    QUERY_PROBE
#    {% if printer.probe.last_query %}
#        M118 Fetching Euclid Probe.
#        _PROBE_DEPLOY
#        G28 Z
#    {% endif %}
#    QUAD_GANTRY_LEVEL_ORIGINIAL
    BED_MESH_PROFILE LOAD=HOTMESH
#    QUERY_PROBE
#    {% if not printer.probe.last_query %}
#        M118 Stowing Euclid Probe.
#        _PROBE_STOW
#    {% else %}
#        M118 ?!Probe is not attached.
#    {% endif %} 
    CLEAN_NOZZLE
    g28 z
    LEDMODE_HOMED
    #G90
    #G0 X{X_MID} Y{Y_MID} F3500
    #G91  
    #G0 X-10 Y-10 F2500
    #PROBE samples_result=median samples=7 speed=5.0 samples_tolerance=0.050 samples_tolerance_retries=3 sample_retract_dist=2.0
    #_CHECK_PROBE2

[gcode_macro _CHECK_PROBE2]
gcode:
    {% set PROBE_PASS = printer.probe.last_z_result %}
    G0 Z2 F500
    G0 X20 F2500
    PROBE samples_result=median samples=7 speed=5.0 samples_tolerance=0.050 samples_tolerance_retries=3 sample_retract_dist=2.0
    _CHECK_PROBE3 PASS={PROBE_PASS}

[gcode_macro _CHECK_PROBE3]
gcode:
    {% set PASS = params.PASS|float %}
    {% set PROBE_PASS = printer.probe.last_z_result %}
    G0 Z2 F500
    G0 Y20 F2500
    PROBE samples_result=median samples=7 speed=5.0 samples_tolerance=0.050 samples_tolerance_retries=3 sample_retract_dist=2.0
    _CHECK_PROBE4 PASS={PROBE_PASS + PASS}

[gcode_macro _CHECK_PROBE4]
gcode:
    {% set PASS = params.PASS|float %}
    {% set PROBE_PASS = printer.probe.last_z_result %}
    G0 Z2 F500
    G0 X-20 F2500
    PROBE samples_result=median samples=7 speed=5.0 samples_tolerance=0.050 samples_tolerance_retries=3 sample_retract_dist=2.0
    _CHECK_PROBE5 PASS={PROBE_PASS + PASS}

[gcode_macro _CHECK_PROBE5]
gcode:
    {% set PASS = params.PASS|float %}
    {% set PROBE_PASS = printer.probe.last_z_result %}
    G90
    G0 Z25 F3500
    _CHECK_PROBE6 PASS={(PROBE_PASS + PASS)/4}

[gcode_macro _CHECK_PROBE6]
gcode:
    {% set ZP_CAL = printer["gcode_macro configvars"].euclidzcompensation|float %}
    {% set PASS = params.PASS|float %}
    {% set Z_POS = printer.toolhead.position.z|float %}
    {% set Z_OFFSET = PASS - ZP_CAL|float %}
    {% set NEW_CURRENT_Z = (Z_POS - Z_OFFSET) %}
    M118 Current Average is: {PASS}
    M118 Z-Probe calibration is: {ZP_CAL}
    M118 Offset: {Z_OFFSET}
    {% if Z_OFFSET|abs > 1 %}
        M118 ! ! !  Z-OFFSET is > 1mm, check nozzle cleanliness and printer  ! ! !
        M118 Not applying calculated offset to Z.
      {% else %}
    M118 Setting current Z_Height of {Z_POS} to {NEW_CURRENT_Z}
    SET_KINEMATIC_POSITION Z={NEW_CURRENT_Z}
    G4 P1000
    M118 Moving nozzle to newly adjusted Z25.
    G0 Z25 F3500
    G4 P1000
      {% endif %}
    QUERY_PROBE
    {% if not printer.probe.last_query %}
        M118 Stowing Euclid Probe.
        _PROBE_STOW
    {% else %}
        M118 ?!Probe is not attached.
    {% endif %}


[gcode_macro CLEAN_NOZZLE]
variable_start_x: 232
variable_start_y: 306
variable_start_z: 6.250
variable_wipe_dist: 50
variable_wipe_qty: 10
variable_wipe_spd: 100
variable_raise_distance: 30
gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}

 G90                                            ; absolute positioning
 {% set Z_POS = printer.toolhead.position.z + 10 %}  #Current z position
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500
 

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}
 G4 P30000
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}


 ## Raise nozzle
 G1 Z{Z_POS}




#.................................................................................................................
[gcode_macro PARK_TOOLHEAD]
gcode:
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}  
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}
    M118 Parking toolhead.
    G90
    # park nozzle at top (at least 75% or Z max or Z + 10) front-right but allow room for hotend fan to pull air
    G0 X{X_MAX} Y20 Z{ [(Z_MAX*0.75), [Z_POS, Z_MAX]|min]|max } F3600 



#.................................................................................................................
[gcode_macro CURRENT_HIGH]
description: Raises stepper current for printing routine.
gcode:
    M117 Increased motor currents.
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro configvars"].printcurrentxy|float}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro configvars"].printcurrentxy|float}
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer["gcode_macro configvars"].printcurrentz|float}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer["gcode_macro configvars"].printcurrentz|float}
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer["gcode_macro configvars"].printcurrentz|float}
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer["gcode_macro configvars"].printcurrentz|float}



#.................................................................................................................
[gcode_macro CURRENT_NORMAL]
description: Lowers stepper current for NON-printing routines, as set in [tmc2209 stepper_XX] above.
gcode:
    M117 Decreased motor currents.
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={ printer.configfile.config["tmc2209 stepper_x"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={ printer.configfile.config["tmc2209 stepper_y"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={ printer.configfile.config["tmc2209 stepper_z"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={ printer.configfile.config["tmc2209 stepper_z1"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={ printer.configfile.config["tmc2209 stepper_z2"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={ printer.configfile.config["tmc2209 stepper_z3"]["run_current"] } 



#.................................................................................................................
[gcode_macro _HEAT_WAIT]
gcode:
    {% set MINUTES = params.MINUTES|default(12)|int %}
    {% for i in range(0, MINUTES) %}
        M117 Warming... {MINUTES-i} minute remaining.
        {% for s in range(0, 60) %}
            LEDMODE_HEATSOAK_A
            G4 P500
            LEDMODE_HEATSOAK_B
            G4 P500
        {% endfor %}
    {% endfor %}



#.................................................................................................................
[gcode_macro _COOL_WAIT]
gcode:
    M106 S250
    {% set MINUTES = params.MINUTES|default(1)|int %}
    {% for i in range(0, MINUTES) %}
        M117 Cooling... {MINUTES-i} minute remaining.
        {% for s in range(0, 60) %}
            LEDMODE_COOLING_A
            G4 P500
            LEDMODE_COOLING_B
            G4 P500
        {% endfor %}
    {% endfor %}
    M107



#.................................................................................................................
[gcode_macro HOTMESH]
gcode:
    CLEAR_PAUSE
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
        {% set defaultWN = printer["gcode_macro configvars"].defaultwarmnozzle|float %}
        {% set defaultTB = printer["gcode_macro configvars"].defaulttempbed|float %}
        {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
        SET_LED LED=nozzle RED=.2 GREEN=.2 BLUE=1
        # Bring bed to full temperature, only warm hotend
        M140 S{BED_TEMP}
        M104 S{defaultWN} 
        G90 
        # Reset the G-Code Z offset
        SET_GCODE_OFFSET Z=0.0
        M117 Performing initial homing.
        G32
        # Move the nozzle
        G1 X0 Y20 Z25 F3000
        M117 Bringing bed to temperature.
        M190 S{BED_TEMP}
        _HEAT_WAIT MINUTES={printer["gcode_macro configvars"].hotmeshsoakminutes|float}
        SET_LED LED=nozzle RED=.5 GREEN=0 BLUE=.5
        M117 Performing hot level.
        CURRENT_HIGH
        M400
        BED_MESH_CLEAR
        G28
        QUERY_PROBE
        {% if printer.probe.last_query %}
            M118 Fetching Euclid Probe.
            _PROBE_DEPLOY
        {% endif %}
        QUAD_GANTRY_LEVEL_ORIGINIAL
        G28
        M117 Performing heated bed mesh calibration.
        BED_MESH_PROFILE REMOVE=HOTMESH
        BED_MESH_CALIBRATE_ORIGINIAL
        BED_MESH_PROFILE SAVE=HOTMESH
        BED_MESH_OUTPUT PGP=1
        M118 Bed mesh calibration completed.
        TURN_OFF_HEATERS
        CURRENT_NORMAL
        M402
        
        M18 X Y E
        SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
        M117 Finished mesh.
        SAVE_CONFIG
    {% endif %}



#.................................................................................................................
[gcode_macro PRINT_START]
gcode:
    CLEAR_PAUSE
    BED_MESH_CLEAR
    SET_LED LED=nozzle RED=.2 GREEN=.2 BLUE=1
	{% set defaultTN = printer["gcode_macro configvars"].defaulttempnozzle|float %}
    {% set defaultWN = printer["gcode_macro configvars"].defaultwarmnozzle|float %}
    {% set defaultTB = printer["gcode_macro configvars"].defaulttempbed|float %}
    {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(defaultTN)|float %}
    {% set NZLD = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}
    # Set Max Chamber Temp 
    M141  S{params.CHAMBER_TEMP}
    # Bring bed to full temperature, only warm hotend
    M140 S{BED_TEMP}
    M104 S{defaultWN}
    G90
    # Reset the G-Code Z offset
    SET_GCODE_OFFSET Z=0.0
#    M117 Performing initial homing.
    #G32
#    g28
#    LEDMODE_HOMED
    # Move the nozzle
#    G1 X0 Y20 Z25 F3000
    M117 Bringing bed to temperature.
    LEDMODE_BEDWARMING
    M190 S{BED_TEMP}
    _HEAT_WAIT MINUTES={printer["gcode_macro configvars"].preprintsoakminutes|float}
    M117 Performing hot level.
    CURRENT_HIGH
    M400
    G32
    CALIBRATE_Z
    LEDMODE_ZCAL
    M83 #reletive E
    M104 S{EXTRUDER_TEMP}
    G1 X0 Y20 F5000.0
    G1 Z0.75
    M117 Bringing nozzle to temperature.
    M109 S{EXTRUDER_TEMP}
    G1 Z5.0 F3000 #Get the nozzle out of the puddle of goo before moving
    M117 Purging the extruder.
    # Purge line start
    G1 X0 Y19.8 Z0.3 F1500.0
    G1 E{(12.5 * NZLD)} F3600
    M400    
    G1 X0 Y0 Z0.3 F1500.0
    G1 X130 Y0.0 Z0.3 F1500.0 E{(37.5 * NZLD)}
    G1 X130 Y0.3 Z0.3 F5000.0
    G1 X010 Y0.3 Z0.3 F1000.0 E{(75.0 * NZLD)}
    M400
    G92 E0
    # Purge line completed
    G1 Z5.0 F3000
    M117 Printing gcode file.
    LEDMODE_PRINTING


#.................................................................................................................
[gcode_macro PRINT_END]
# Use PRINT_END for the slicer ending script
gcode:
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}  
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}
    G91
    G0 Z5 # Moved here to get nozzle off the surface while paused during g-code save 
    G90
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F1800                 ; retract filament
    TURN_OFF_HEATERS
    CLEAN_NOZZLE
#   G91
#   G0 Z5
#   G90
    M400
    _COOL_WAIT MINUTES={printer["gcode_macro configvars"].postprintcool|float}
    PARK_TOOLHEAD
    M18 X Y E
    M107                           ; turn off fan
    M106 S0                        ; turn off part cooling fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro configvars"].postprintparkcool|float}
    LEDMODE_IDLE
    M117 Finished printing, check nozzle clear.
    M118 Finished printing, check nozzle clear.



#.................................................................................................................

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    M109 S180
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    {% set x = params.X|default(0) %}        #edit to your park position
    {% set y = params.Y|default(0) %}        #edit to your park position
    {% set z = params.Z|default(20)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{e} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
        G1 Z{z_safe}
        G90
        G1 X{x} Y{y} F6000
    {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %}



#.................................................................................................................
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    {% set e = params.E|default(1) %} #edit to your retract length
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
        {% set get_params = "" %}
    {% endif %}
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}



#.................................................................................................................
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}
    G91
    G0 Z5 # Moved here to get nozzle off the surface while paused during g-code save 
    G90
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    CLEAR_PAUSE
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    CURRENT_NORMAL
    M106 S250
    G90
    M400
    _COOL_WAIT MINUTES={printer["gcode_macro configvars"].postprintcool|float}
    PARK_TOOLHEAD
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro configvars"].postprintparkcool|float}
    SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
    M117 Cancelled print, check nozzle clear.
    M118 Cancelled print, check nozzle clear.
    

#.................................................................................................................
[gcode_macro LOAD_FILAMENT]
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {% if printer.idle_timeout.state == "Printing" and printer.pause_resume.is_paused %}
           SAVE_GCODE_STATE NAME=HLF_state
            M83                       ; relative positioning on extruder    
            G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
            G0 E50 F400               ; prime extruder
            G0 E50 F200               ; prime extruder
            G1 E-0.5 F1800            ; .5mm retraction
            G92 E0                    ; reset extruder
            M400
            RESTORE_GCODE_STATE NAME=HLF_state
        {% else %}
            {action_respond_info("Pause print first.")}
        {% endif %}
    {% else %}
        {% if printer.toolhead.homed_axes != "xyz" %}
            M117 Performing required homing.
            G28
        {% endif %}
        {% set defaultTN = printer["gcode_macro configvars"].defaulttempnozzle|float %}
        {% set TEMP = params.TEMP|default(defaultTN)|float %}
        M117 Heating nozzle to LOAD filamnet.
        G90                       ; absolute positioning
        G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
        M109 S{TEMP}              ; set hotend temperature and wait
        M83                       ; relative positioning on extruder    
        G0 E50 F400               ; prime extruder
        G0 E50 F200               ; prime extruder
        G1 E-0.5 F1800            ; .5mm retraction
        G92 E0                    ; reset extruder
        M400
        
        M18 X Y E
        TURN_OFF_HEATERS
        M117 Finished filament load.
    {% endif %}



#.................................................................................................................
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {% if printer.idle_timeout.state == "Printing" and printer.pause_resume.is_paused %}
            SAVE_GCODE_STATE NAME=HUF_state
            M83                       ; relative positioning on extruder    
            G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
            G0 E5 F3000               ; push in quickly
            G0 E-10 F3600             ; retract quickly to move out of melt zone
            G0 E-50 F300             ; retract additional filament to move out of gears
            G0 E-50 F300             ; retract additional filament to move out of gears
            G92 E0                    ; reset extruder
            M400
            RESTORE_GCODE_STATE NAME=HUF_state
        {% else %}
            {action_respond_info("Pause print first.")}
        {% endif %}
    {% else %}
        {% if printer.toolhead.homed_axes != "xyz" %}
            M117 Performing required homing.
            G28
        {% endif %}
	    {% set defaultTN = printer["gcode_macro configvars"].defaulttempnozzle|float %}
        {% set TEMP = params.TEMP|default(defaultTN)|float %}
        M117 Heating nozzle to UNLOAD filamnet.
        G90                       ; absolute positioning
        G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament    
        M109 S{TEMP}              ; set hotend temperature and wait    
        M83                       ; relative positioning on extruder
        G0 E5 F3000               ; push in quickly
        G0 E-10 F3600             ; retract quickly to move out of melt zone
        G0 E-50 F300             ; retract additional filament to move out of gears
        G0 E-50 F300             ; retract additional filament to move out of gears
        G92 E0                    ; reset extruder
        M400
        
        M18 X Y E
        TURN_OFF_HEATERS
        M117 Finished filament unload.
    {% endif %}


#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Additional MACROS, creature comforts / non-essential but helpful
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#.................................................................................................................
[gcode_macro NZL_PID]
# Usage: NZL_PID BED_TEMP=95 NZL_TEMP=238
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
	    {% set defaultTN = printer["gcode_macro configvars"].defaulttempnozzle|float %}
        {% set defaultTB = printer["gcode_macro configvars"].defaulttempbed|float %}
        {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
        {% set NZL_TEMP = params.NZL_TEMP|default(defaultTN)|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
        {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}
        {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
        SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=0
        G90
        M117 Performing initial homing.
        G32
        G1 Z5 Y{Y_MID} X{X_MID} F3000
        M117 Bringing bed to temperature.
        M190 S{BED_TEMP}
        _HEAT_WAIT MINUTES=12
        SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=0
        M106 S64
        M117 Starting PID calibration.
        PID_CALIBRATE HEATER=extruder TARGET={NZL_TEMP}
        M117 Finished PID calibration.
        TURN_OFF_HEATERS
        CURRENT_NORMAL
        G90
        
        M18 X Y E
        SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
	    _COOL_WAIT MINUTES={printer["gcode_macro configvars"].postprintparkcool|float}
        SAVE_CONFIG
    {% endif %}



#.................................................................................................................
[gcode_macro BED_PID]
# Usage: BED_PID BED_TEMP=95
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
        {% set defaultTB = printer["gcode_macro configvars"].defaulttempbed|float %}
        {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
        {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}
        {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
        SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=0
        G90
        M117 Performing initial LEDMODE_HOMED.
        G32
        G1 Z5 Y{Y_MID} X{X_MID} F3000
        M106 S64
        M117 Starting PID calibration.
        PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}
        M117 Finished PID calibration. 
        TURN_OFF_HEATERS
        CURRENT_NORMAL
        
        M18 X Y E
        SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
        _COOL_WAIT MINUTES=1
        SAVE_CONFIG
    {% endif %}



#.................................................................................................................
[gcode_macro PA_CAL]
description: Tune Pressure Advance
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}	
    {% else %}
	    {% set defaultTN = printer["gcode_macro configvars"].defaulttempnozzle|float %}
        {% set defaultTB = printer["gcode_macro configvars"].defaulttempbed|float %}
        {% set BED = params.BED|default(defaultTB)|float %}
        {% set EXTRUDER = params.EXTRUDER|default(defaultTN)|float %}
        {% set PA_START = params.PA_START|default(0.0)|float %}
        {% set PA_STEP = params.PA_STEP|default(0.005)|float %}
        {% set NZL_CFG = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}
        {% set NZL = params.NZL|default(NZL_CFG)|float %}
        {% set E20 = (0.1147475 * NZL) * 20|float %}
        {% set E40 = (0.1147475 * NZL) * 40|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
        PRINT_START BED_TEMP={BED} EXTRUDER_TEMP={EXTRUDER}
        G21 ; Millimeter units
        G90 ; Absolute XYZ
        M83 ; Relative E
        SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
        G92 E0
        M106 S0 
        G1 X{(X_MID-40)} Y{(Y_MID-65)} F30000          ; move to start position
        G1 Z0.25 F300                                  ; move to layer height
        G1 E0.75 F1800                                 ; un-retract
        G1 X{(X_MID-20)} Y{(Y_MID-65)} E{E20} F300     ; print line part one
        G1 X{(X_MID+20)} Y{(Y_MID-65)} E{E40} F9000    ; print line part two
        G1 X{(X_MID+40)} Y{(Y_MID-65)} E{E20} F300     ; print line part three
        G1 E-0.75 F1800                                ; retract
        G1 Z1 F300                                     ; Move above layer height  
        {% for i in range(0, 20) %}
            SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)} ; set Pressure Advance
            M117 Testing Pressure Advance at: {PA_START + (i * PA_STEP)}
            G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F30000           ; move to start position
            G1 Z0.25 F300                                         ; move to layer height
            G1 E0.75 F1800                                        ; un-retract
            G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part one
            G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F9000     ; print line part two
            G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part three
            G1 E-0.75 F1800                                       ; retract
            G1 Z1 F300                                            ; Move above layer height  
        {% endfor %}
	    M117 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting.
	    M118 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting.
        PRINT_END
    {% endif %}


#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.531
#*# pid_ki = 1.216
#*# pid_kd = 134.038
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.451
#*# pid_ki = 1.469
#*# pid_kd = 238.753
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.001875, 0.016250, 0.035000, 0.066875, 0.043125, 0.058750, 0.037500, 0.033750, 0.055000, 0.027500, 0.023750
#*# 	-0.008125, 0.025000, 0.012500, 0.028750, 0.050625, 0.037500, 0.063750, 0.037500, 0.034375, -0.002500, -0.025000
#*# 	-0.025000, -0.003125, 0.013125, 0.013750, 0.026250, 0.045000, 0.033125, 0.015625, 0.003750, 0.001875, -0.023750
#*# 	-0.006875, -0.010000, 0.014375, 0.012500, 0.025000, 0.010625, 0.013125, 0.033750, 0.011250, -0.001875, -0.025000
#*# 	-0.016250, -0.008125, 0.001250, 0.007500, 0.027500, 0.006250, 0.005000, -0.003125, 0.001875, -0.021250, -0.043125
#*# 	-0.030625, -0.020625, -0.014375, -0.008750, 0.015625, 0.000000, 0.008750, 0.011250, -0.022500, 0.003750, -0.041250
#*# 	-0.030000, -0.015000, -0.010625, 0.013750, 0.018750, 0.014375, 0.026875, 0.005625, -0.004375, -0.014375, -0.043125
#*# 	0.001875, -0.015625, 0.001250, 0.020625, 0.016250, 0.030625, 0.023750, -0.006875, -0.000000, -0.014375, -0.031250
#*# 	0.006250, -0.010000, -0.015625, -0.013750, 0.005625, 0.025000, 0.023750, -0.003750, -0.012500, -0.027500, -0.026875
#*# 	-0.003750, -0.013125, -0.003125, -0.001875, 0.010000, 0.011875, 0.023125, 0.029375, 0.005000, -0.012500, -0.041875
#*# 	0.013750, 0.022500, -0.011875, 0.005000, 0.018750, 0.046875, 0.035000, 0.009375, 0.062500, 0.014375, -0.040000
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 11
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 11
#*# max_y = 260.0
#*# mesh_x_pps = 2
#*# max_x = 260.0
#*#
#*# [bed_mesh HOTMESH]
#*# version = 1
#*# points =
#*# 	0.001875, 0.016250, 0.035000, 0.066875, 0.043125, 0.058750, 0.037500, 0.033750, 0.055000, 0.027500, 0.023750
#*# 	-0.008125, 0.025000, 0.012500, 0.028750, 0.050625, 0.037500, 0.063750, 0.037500, 0.034375, -0.002500, -0.025000
#*# 	-0.025000, -0.003125, 0.013125, 0.013750, 0.026250, 0.045000, 0.033125, 0.015625, 0.003750, 0.001875, -0.023750
#*# 	-0.006875, -0.010000, 0.014375, 0.012500, 0.025000, 0.010625, 0.013125, 0.033750, 0.011250, -0.001875, -0.025000
#*# 	-0.016250, -0.008125, 0.001250, 0.007500, 0.027500, 0.006250, 0.005000, -0.003125, 0.001875, -0.021250, -0.043125
#*# 	-0.030625, -0.020625, -0.014375, -0.008750, 0.015625, 0.000000, 0.008750, 0.011250, -0.022500, 0.003750, -0.041250
#*# 	-0.030000, -0.015000, -0.010625, 0.013750, 0.018750, 0.014375, 0.026875, 0.005625, -0.004375, -0.014375, -0.043125
#*# 	0.001875, -0.015625, 0.001250, 0.020625, 0.016250, 0.030625, 0.023750, -0.006875, -0.000000, -0.014375, -0.031250
#*# 	0.006250, -0.010000, -0.015625, -0.013750, 0.005625, 0.025000, 0.023750, -0.003750, -0.012500, -0.027500, -0.026875
#*# 	-0.003750, -0.013125, -0.003125, -0.001875, 0.010000, 0.011875, 0.023125, 0.029375, 0.005000, -0.012500, -0.041875
#*# 	0.013750, 0.022500, -0.011875, 0.005000, 0.018750, 0.046875, 0.035000, 0.009375, 0.062500, 0.014375, -0.040000
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 11
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 11
#*# max_y = 260.0
#*# mesh_x_pps = 2
#*# max_x = 260.0
#*#
#*# [probe]
#*# z_offset = 3.748
